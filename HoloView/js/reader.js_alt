function importdata(event){
	//Liest gespeicherte Analyseergebnise aus der Textdatei und zeigt sie wieder an

	var file = event.target.files[0];
	var reader  = new FileReader();
	if (file) {
		reader.readAsText(file);
	}
	//Wenn die Datei fertig eingelesen sind, dann wandle sie in ein Array um
	reader.onload = function(event) {
		
	try{
			dataarray=JSON.parse(event.target.result);
		}catch(e){
			alert("Die Datei ist besch√§digt und kann nicht gelesen werden.");
			document.getElementById('hidenbtn').value='';
			loading();
			return;
		}
	};
}



function abortRead() {
    reader.abort();
  }

  function errorHandler(evt) {
    switch(evt.target.error.code) {
      case evt.target.error.NOT_FOUND_ERR:
        alert('File Not Found!');
        break;
      case evt.target.error.NOT_READABLE_ERR:
        alert('File is not readable');
        break;
      case evt.target.error.ABORT_ERR:
        break; // noop
      default:
        alert('An error occurred reading this file.');
    };
  }

  function updateProgress(evt) {
    // evt is an ProgressEvent.
    if (evt.lengthComputable) {
      var percentLoaded = Math.round((evt.loaded / evt.total) * 100);
      // Increase the progress bar length.
      if (percentLoaded < 100) {
        progress.style.width = percentLoaded + '%';
        progress.textContent = percentLoaded + '%';
      }
    }
  }

  function handleFileSelect(evt) {
    // Reset progress indicator on new file selection.
    progress.style.width = '0%';
    progress.textContent = '0%';

    reader = new FileReader();
    reader.onerror = errorHandler;
    reader.onprogress = updateProgress;
    reader.onabort = function(e) {
      alert('File read cancelled');
    };
    reader.onloadstart = function(e) {
      document.getElementById('progress_bar').className = 'loading';
    };
    reader.onload = function(e) {
      // Ensure that the progress bar displays 100% at the end.
      progress.style.width = '100%';
      progress.textContent = '100%';
	  //loadmodel(file);
      setTimeout("document.getElementById('progress_bar').className='';", 2000);
		
	var file = evt.target.files[0];
	console.log(evt.target.files[0]);
    loadmodel(file);  
    
	
	}

    // Read in the image file as a binary string.
    reader.readAsBinaryString(evt.target.files[0]);
	
	
  }
  
function readSingleFile(e) {
  var file = e.target.files[0];
  console.log(e.target.files[0]);
  loadjs(file);
  
  /*
  if (!file) {
    return;
  }
  var reader = new FileReader();
  reader.onload = function(e) {
    var contents = e.target.result;
    loadmodel(contents);
  };
  reader.readAsText(file);
  */
}
  

